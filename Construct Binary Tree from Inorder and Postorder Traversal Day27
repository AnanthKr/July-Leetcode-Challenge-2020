Given inorder and postorder traversal of a tree, construct the binary tree.

Note:
You may assume that duplicates do not exist in the tree.

For example, given

inorder = [9,3,15,20,7]
postorder = [9,15,7,20,3]
Return the following binary tree:

    3
   / \
  9  20
    /  \
   15   7
   
   Python 3 program:
   
   class Solution:
    def buildTree(self, inorder: List[int], postorder: List[int]) -> TreeNode:
        mapper = {}
        for i,v in enumerate(inorder):
            mapper[v] = i
            
        def rec(low,high):
            #basecondition
            if low > high:
                return
            root = TreeNode(postorder.pop())
            mid = mapper[root.val]
            root.right = rec(mid+1,high)
            root.left = rec(low,mid-1)
            return root
        
        return rec(0,len(inorder)-1)
            
